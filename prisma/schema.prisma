// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserGroup {
      id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
      name        String    @db.Text  @unique
      status      Boolean   @default(true)
      user        User[]
      authmenu    UserGroupMenu[]
}

model Farm{
      id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
      name        String    @db.Text  @unique
      status      Boolean   @default(true)
}

model User {
    id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String    @db.Text
    username    String    @db.Text
    email       String    @unique
    password    String    
    img         String?
    usergroup   UserGroup?    @relation(fields: [usergroupId], references: [id])
    usergroupId String?   @db.Uuid
    status      Boolean   @default(false)
    google      Boolean   @default(false)
    datecreated DateTime  @default(now())
    }

model MainMenu{ 
      id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
      mainmenu    String    @db.Text @unique
      route       String?   @db.Text  
      icon        String?   @db.Text  
      status      Boolean?   @default(true)
      menu        Menu[]
}
model Menu{ 
      id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
      menu        String    @db.Text @unique
      mainmenu    MainMenu   @relation(fields: [mainmenuId], references: [id]) 
      mainmenuId  String     @db.Uuid    
      submenu     SubMenu[]
      status      Boolean?   @default(true)
}
model SubMenu{ 
      id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
      title       String    @db.Text @unique
      route       String?    @db.Text @unique
      icon        String    @db.Text @unique
      detail      String    @db.Text @unique
      menu        Menu      @relation(fields: [menuId], references: [id]) 
      menuId      String    @db.Uuid    
      status      Boolean?  @default(true)
      authmenu    UserGroupMenu[]
}

model UserGroupMenu {
      id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
      submenu           SubMenu   @relation(fields: [submenuId], references: [id]) 
      submenuId         String    @db.Uuid    
      usergroup         UserGroup   @relation(fields: [usergroupId], references: [id]) 
      usergroupId       String    @db.Uuid    
      status            Boolean?  @default(true)
}






    // correo: {
    //     type : String,
    //     required: [true, 'Correo Obligatorio'],
    //     unique: true
    // },
    // password: {
    //     type : String,
    //     required: [true, 'Password Obligatorio']
    // },
    // img: {
    //     type : String,
    // },
    // rol: {
    //     type : String,
    //     required: [true],
    //     // emun: ['ADMIN_ROLE', 'USER_ROLE'],
    //     default: 'ADMIN_ROLE'
    // },
    // idusergroup:{
    //     type: Schema.Types.ObjectId,
    //     ref: 'usergroup',
    //     // required: true
    // },
    // idfarms:[{
    //     idfarm:{
    //         type: Schema.Types.ObjectId,
    //         ref: 'farm',
    //         }
    //     }],
    // status: {
    //     type : Boolean,
    //     default: true
    // },
    // google: {
    //     type : Boolean,
    //     default: false
    // }

// }